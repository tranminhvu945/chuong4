import pygame
import sys
import random
import math
pygame.init()
screen = pygame.display.set_mode((1600,900))
pygame.display.set_caption("Tráº­n Him Lam")
icon_img = pygame.image.load("project_resources/icon.png")
pygame.display.set_icon(icon_img)
bg_1_img = pygame.image.load("project_resources/bg1.jpg")
bg_2_img = pygame.image.load("project_resources/bg2.jpg")
play_1_img = pygame.image.load("project_resources/play1.png")
exit_1_img = pygame.image.load("project_resources/exit1.png")
play_2_img = pygame.image.load("project_resources/play2.png")
exit_2_img = pygame.image.load("project_resources/exit2.png")
chan_img = pygame.image.load("project_resources/ChanPhao.png")
chan_img = pygame.transform.scale(chan_img,(80,40))
nong_img = pygame.image.load("project_resources/NongPhao.png")
nong_img = pygame.transform.scale(nong_img,(120,40))
himlam_img = pygame.image.load("project_resources/HimLam.png")
himlam_img = pygame.transform.scale(himlam_img,(100,90))
decart_img = pygame.image.load("project_resources/HamDecart.png")
decart_img = pygame.transform.scale(decart_img,(150,60))
back_img = pygame.image.load("project_resources/Back.png")
back_img = pygame.transform.scale(back_img,(70,50))
dan_img = pygame.image.load("project_resources/dan.png")
dan_img = pygame.transform.scale(dan_img,(20,20))
khung_luc = pygame.image.load("project_resources/luc.jpg")
khung_luc = pygame.transform.scale(khung_luc,(500,50))
luc = pygame.image.load("project_resources/load.png")
luc = pygame.transform.scale(luc,(500,50))
muiten = pygame.image.load("project_resources/mui-ten.png")
muiten = pygame.transform.scale(muiten,(100,60))
no_animation =  [pygame.image.load("project_resources/No/1.png"),
                 pygame.image.load("project_resources/No/2.png"),
                 pygame.image.load("project_resources/No/3.png"),
                 pygame.image.load("project_resources/No/4.png"),
                 pygame.image.load("project_resources/No/5.png")]
hp = pygame.image.load("project_resources/hp.png")
hp = pygame.transform.scale(hp,(200,20))
nhacnen = pygame.mixer.Sound("project_resources/NhacNen.mp3")
nhacno = pygame.mixer.Sound("project_resources/TiengNo.mp3")
nhacban = pygame.mixer.Sound("project_resources/nembom.mp3")
nhacxoay = pygame.mixer.Sound("project_resources/tick.mp3")
co_animation = [pygame.image.load("project_resources/CoVN/1.png"),
                pygame.image.load("project_resources/CoVN/2.png"),
                pygame.image.load("project_resources/CoVN/3.png"),
                pygame.image.load("project_resources/CoVN/4.png"),
                pygame.image.load("project_resources/CoVN/5.png")]
nhacwin = pygame.mixer.Sound("project_resources/QuocCa.mp3")
nhacnen.play(-1)
nhacnen.set_volume(10)
tt = 0
huong = 0
h_change = 0
List_Linh = []
clock = pygame.time.Clock()
luc_ban = 0
luc_change = 0
load = False
ban = False
huong_gio = random.randint(0,1)
luc_gio = random.randint(0,50)
wind_title = pygame.font.SysFont("Arial",30)
wind_text = pygame.font.SysFont("Arial",30)
dan_dichuyen = False
no = False
x = 180
y = 700
dem = 0
hp_dich = 200
xoay = False
x_co = 900
y_co = 640
class Linh:
    def __init__(self, x, y, speed, right, num):
        self.x = x
        self.y = y
        self.min_x = 800
        self.max_x = 1120
        self.speed = speed
        self.right = right
        self.num = num
        self.animation = [pygame.image.load("project_resources/linh/1.png"),
                          pygame.image.load("project_resources/linh/2.png"),
                          pygame.image.load("project_resources/linh/3.png"),
                          pygame.image.load("project_resources/linh/4.png"),
                          pygame.image.load("project_resources/linh/5.png"),]
        size = (70, 40)
        for i in range (0, 5):
            self.animation[i] = pygame.transform.scale(self.animation[i], size)
            if right == False:
                self.animation[i] = pygame.transform.flip(self.animation[i], True, False)
    def Run(self):
        if self.right:
            self.x += self.speed
            if self.x >= self.max_x:
                self.right = False
                for i in range (0, 5):
                    self.animation[i] = pygame.transform.flip(self.animation[i], True, False)
        else:
            self.x -= self.speed
            if self.x <= self.min_x:
                self.right = True
                for i in range(0, 5):
                    self.animation[i] = pygame.transform.flip(self.animation[i], True, False)
        self.num += 1
        stt = self.num//5
        if self.num == 25:
            self.num = 0
            stt = 0
        screen.blit(self.animation[stt], (self.x, self.y))
#linh = Linh(850, 700, 1, True, 0)
while True:
    clock.tick(60)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                h_change = 0.2
                xoay = True
            if event.key == pygame.K_DOWN:
                h_change = -0.2
                xoay = True
            if event.key == pygame.K_SPACE and dan_dichuyen == False:
                load = True
                luc_ban = 0
        if event.type == pygame.KEYUP:
            h_change = 0
            luc_change = 0
            load = False
            xoay = False
            if event.key == pygame.K_SPACE and dan_dichuyen == False:
                ban = True
                t = 0
                dan_dichuyen = True
                no = False
                dem = 0
                if tt == 1:
                    nhacban.play()
    huong += h_change
    #print(huong)
    if huong > 54:
        huong = 54
    if huong < 0:
        huong = 0
    if tt == 0:
        mousePos = pygame.mouse.get_pos()
        play_rect = pygame.Rect(100,250,396,197)
        exit_rect = pygame.Rect(100,450,396,197)
screen.blit(bg_1_img,(0,0))
        if play_rect.collidepoint(mousePos):
            screen.blit(play_2_img,(100,250))
            mouse = pygame.mouse.get_pressed()
            if mouse[0]:
                tt = 1
        else:
            screen.blit(play_1_img,(100,250))
        if exit_rect.collidepoint(mousePos):
            screen.blit(exit_2_img,(100,450))
            mouse = pygame.mouse.get_pressed()
            if mouse[0]:
                pygame.quit()
                sys.exit()
        else:
            screen.blit(exit_1_img,(100,450))
    elif tt == 1:
        if xoay:
            nhacxoay.play()
        if load:
            luc_ban += luc_change
            if luc_ban > 500:
                luc_change = -5
            if luc_ban < 5:
                luc_change = 5
        tam = (220, 695)
        screen.blit(bg_2_img,(0,0))
        nong_xoay = pygame.transform.rotate(nong_img, huong)
        nong_xoay_rect = nong_xoay.get_rect(center = tam)
        screen.blit(nong_xoay,nong_xoay_rect)
        screen.blit(chan_img,(145,695))
        screen.blit(himlam_img,(900,640))
        screen.blit(decart_img,(1460,835))
        screen.blit(back_img,(1500,50))
        loading = pygame.transform.scale(luc,(luc_ban,50))
        screen.blit(khung_luc,(400,830))
        screen.blit(loading,(400,830))
        mousePos = pygame.mouse.get_pos()
        Back_rect = pygame.Rect(1500,50,70,50)
        if Back_rect.collidepoint(mousePos):
            mouse = pygame.mouse.get_pressed()
            if mouse[0]:
                tt = 0
        if len(List_Linh) < 4:
            sl = random.randint(1, 6)
            for i in range (sl):
                huong_linh = random.randint(0,1)
                speed = random.randint (1,4)/2
                x_1 = random.randrange(820, 1120, 10)
                if huong_linh == 0:
                    List_Linh.append(Linh(x_1,700,speed,True,0))
                else:
                    List_Linh.append(Linh(x_1,700,speed,False,0))
        for linh in List_Linh:
            linh.Run()
            if ban:
                x_linh = linh.x
                y_linh = linh.y
                kc = math.sqrt((x - x_linh)**2 + (y - y_linh)**2)
                if kc < 30:
                    no = True
                    dan_dichuyen = False
                    List_Linh.remove(linh)
                    hp_dich -= 10
                    if hp_dich < 10:
                        tt += 1
                        nhacnen.stop()
                        nhacwin.play()
        if ban and dan_dichuyen:
            x_0 = 180
            y_0 = 700
            v_0 = luc_ban/3
            if huong_gio == 0:
                v0x = v_0*math.cos(math.radians(huong)) - luc_gio/19*t
            else:
                v0x = v_0*math.cos(math.radians(huong)) + luc_gio/19*t
            x = x_0 + v0x*t
            y = y_0 - v_0*math.sin(math.radians(huong)) + 9.8*t*t/2
            screen.blit (dan_img,(x,y))
            t += 0.1
